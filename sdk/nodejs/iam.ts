// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Iam extends pulumi.ComponentResource {
    /** @internal */
    public static readonly __pulumiType = 'securebaseline:index:Iam';

    /**
     * Returns true if the given object is an instance of Iam.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Iam {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Iam.__pulumiType;
    }


    /**
     * Create a Iam resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: IamArgs, opts?: pulumi.ComponentResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["allowUsersToChangePassword"] = args ? args.allowUsersToChangePassword : undefined;
            resourceInputs["enablePasswordPolicy"] = args ? args.enablePasswordPolicy : undefined;
            resourceInputs["enableSupportRole"] = args ? args.enableSupportRole : undefined;
            resourceInputs["minimumPasswordLength"] = args ? args.minimumPasswordLength : undefined;
            resourceInputs["passwordReusePrevention"] = args ? args.passwordReusePrevention : undefined;
            resourceInputs["requireLowercaseCharacters"] = args ? args.requireLowercaseCharacters : undefined;
            resourceInputs["requireNumbers"] = args ? args.requireNumbers : undefined;
            resourceInputs["requireSymbols"] = args ? args.requireSymbols : undefined;
            resourceInputs["requireUppercaseCharacters"] = args ? args.requireUppercaseCharacters : undefined;
        } else {
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Iam.__pulumiType, name, resourceInputs, opts, true /*remote*/);
    }
}

/**
 * The set of arguments for constructing a Iam resource.
 */
export interface IamArgs {
    allowUsersToChangePassword?: pulumi.Input<boolean>;
    enablePasswordPolicy?: pulumi.Input<boolean>;
    enableSupportRole?: pulumi.Input<boolean>;
    minimumPasswordLength?: pulumi.Input<number>;
    passwordReusePrevention?: pulumi.Input<number>;
    requireLowercaseCharacters?: pulumi.Input<boolean>;
    requireNumbers?: pulumi.Input<boolean>;
    requireSymbols?: pulumi.Input<boolean>;
    requireUppercaseCharacters?: pulumi.Input<boolean>;
}
